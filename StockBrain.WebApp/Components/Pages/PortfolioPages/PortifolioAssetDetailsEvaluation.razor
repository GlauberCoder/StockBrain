@using StockBrain.Domain.Models
@using StockBrain.WebApp.Components.Pages.AssetPages



<RadzenStack Orientation="Orientation.Vertical" JustifyContent="JustifyContent.Start" Gap="1rem">
	<RadzenStack Gap="0">
		<RadzenStack JustifyContent="JustifyContent.SpaceBetween" Gap="1rem">
			<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start" JustifyContent="JustifyContent.SpaceBetween">
				<RadzenText TextStyle="TextStyle.H6">@Asset.Asset.Score.Value / @Asset.Asset.Score.Total Points</RadzenText>
				<RadzenText TextStyle="TextStyle.H6" class="rz-m-0">@PointPercentage.PercentageFormat()</RadzenText>
			</RadzenStack>
			<RadzenProgressBar Value=@PointPercentage.ToPercentage() ShowValue="false" Style="--rz-progressbar-height: 1rem;" />
		</RadzenStack>
	</RadzenStack>
	@foreach (var answer in Asset.Asset.Answers)
	{
		<RadzenStack Gap="0">
			<RadzenRow RowGap="0">
				<RadzenColumn SizeSM="8">
					<RadzenText TextStyle="TextStyle.Overline" title="@answer.Factor.Description">@answer.Factor.Name</RadzenText>
					<RadzenBadge IsPill="true" Variant="Variant.Outlined" BadgeStyle="GetBadgeStyle(answer.Answer)" Text="@GetBadgeLabel(answer.Answer)" class="rz-ml-5" Style="width:30px" />
				</RadzenColumn>
			</RadzenRow>
		</RadzenStack>
	}
</RadzenStack>

@code {
	[Parameter]
	public PortfolioAssetDetail Asset { get; set; }
	public double PointPercentage => Asset.Asset.Score.Proportion; 
	BadgeStyle GetBadgeStyle(bool answer)
	{
		return answer ? BadgeStyle.Primary : BadgeStyle.Danger;
	}
	string GetBadgeLabel(bool answer)
	{
		return answer ? "+1" : "-1";
	}
}
